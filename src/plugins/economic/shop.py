import lightbulb
import hikari
import miru

from config import setting
from utils import local, access, db

plugin = lightbulb.Plugin("shop", default_enabled_guilds=setting.guild_id)


@plugin.command()
@lightbulb.add_checks(access.disable_command)
@lightbulb.option(
    name="list",
    description="–í—ã–±–µ—Ä–∏—Ç–µ –∏–∑ —Å–ø–∏—Å–∫–∞, —á—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∫—É–ø–∏—Ç—å",
    type = hikari.OptionType.STRING,
    choices=[
        "–£–¥–æ—á–∫–∞",
        "–ö—Ä—é—á–æ–∫",
        "–ë–∞–Ω–Ω–µ—Ä"
    ],
    required=False
)
@lightbulb.option(
    name="id",
    description="ID –ø–æ–∫—É–ø–∫–∏",
    type= hikari.OptionType.INTEGER,
    required=False
)
@lightbulb.command("shop", "–ì–ª–æ–±–∞–ª—å–Ω—ã–π –º–∞–≥–∞–∑–∏–Ω –±–æ—Ç–∞")
@lightbulb.implements(lightbulb.SlashCommand)
async def shop(ctx: lightbulb.Context) -> None:
    l = local.localization(ctx.get_guild().id)
    user = db.user(ctx.author.id)
    list = ctx.options.list
    id = int(ctx.options.id)

    class ShopButton(miru.View):

        @miru.button(emoji="üé£", style=hikari.ButtonStyle.SECONDARY)
        async def rod_list(self, button: miru.Button, ctx: miru.ViewContext) -> None:
            emb = (
                hikari.Embed(
                    title="–°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —É–¥–æ—á–µ–∫",
                    description="–ê–≥–∞",
                    color=setting.color
                )
            )
            await ctx.respond(
                embed=emb,
                component=None,
                flags=hikari.MessageFlag.EPHEMERAL
            )

        @miru.button(emoji="ü™ù", style=hikari.ButtonStyle.SECONDARY)
        async def fish_hook_list(self, button: miru.Button, ctx: miru.ViewContext) -> None:
            emb = (
                hikari.Embed(
                    title="–°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫—Ä—é—á–∫–æ–≤",
                    description="–ê–≥–∞",
                    color=setting.color
                )
            )
            await ctx.respond(
                embed=emb,
                component=None,
                flags=hikari.MessageFlag.EPHEMERAL
            )

        @miru.button(emoji="üñºÔ∏è", style=hikari.ButtonStyle.SECONDARY)
        async def banner_list(self, button: miru.Button, ctx: miru.ViewContext):
            emb = (
                hikari.Embed(
                    title="–°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –±–∞–Ω–Ω–µ—Ä–æ–≤",
                    description="–í–µ—Å—å —Å–ø–∏—Å–æ–∫ –±–∞–Ω–Ω–µ—Ä–æ–≤ –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è [–∑–¥–µ—Å—å](https://boticord.gay)",
                    color=setting.color
                )
            )
            await ctx.respond(
                embed=emb,
                component=None,
                flags=hikari.MessageFlag.EPHEMERAL
            )


    emb = (
        hikari.Embed(
            title="–ú–∞–≥–∞–∑–∏–Ω –±–æ—Ç–∞",
            description="–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–∫—É–ø–∞—Ç—å –∫–∞–∫ —É–¥–æ—á–∫–∏ –∏ –∫—Ä—é—á–∫–∏, —Ç–∞–∫ –∏ –±–∞–Ω–Ω–µ—Ä—ã –¥–ª—è —Å–≤–æ–µ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è\n–î–ª—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –ø–æ—Å–µ—Ç–∏—Ç–µ [–¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é](https://docs.maibot.xyz)",
            color=setting.color
        )
    )

    if list and id == None:
        button = ShopButton()
        msg = await ctx.respond(embed=emb, components=button, flags=hikari.MessageFlag.EPHEMERAL)
        await button.start(msg)

    if list == "–£–¥–æ—á–∫–∞":

        if user["rod"] >= id:
            await ctx.respond("–£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å —Ç–∞–∫–∞—è —É–¥–æ—á–∫–∞ –∏–ª–∏ –±—ã–ª–∞ –≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏")
            return

        if id <= 0:
            await ctx.respond(123)

        if id == 1:
            if user["coin"] < 100:
                await ctx.respond("–£ –≤–∞—Å –Ω–µ—Ç –¥–µ–Ω–µ–≥ –Ω–∞ –ø–æ–∫—É–ø–∫—É F")
                return

            db.db.user.update_one(
                {"id": ctx.author.id},
                {"$set": {
                    "rod": id
                }}
            )

            await ctx.respond("–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –∑–∞ –ø–æ–∫—É–ø–∫—É")
        else:
            await ctx.respond("—Ç–∞–∫–æ–π —É–¥–æ—á–∫–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")


def load(client):
    client.add_plugin(plugin)